BOOL x, y;
CONST BOOL z = FALSE;
CONST INT t = 0;
INT q, r

FUNCTION fun(INT a, INT b, BOOL c, BOOL d) : INT
	INT a2, b2;
	BOOL c2
	
	FUNCTION fun2(BOOL cierto) : BOOL
		TYPE
			tipo4: ^BOOL;
			tipo5: BOOL;
			tipo6: ^tipo5
		FTYPE
		
		BOOL b3;
		tipo4 t;
		INT i
		BEGIN
			b3 = TRUE;
			b3 = b3 || cierto;
			i = 4;
			WHILE (i > 0) DO
			BEGIN 
				i = i - 1
			END
			RETURN TRUE
		END
		
	FUNCTION fun3(BOOL cierto) : INT
		BOOL b3;
		INT i
		BEGIN
			b3 = TRUE;
			b3 = b3 || cierto;
			i = 4 + 2;
			WHILE (i > 0) DO
			BEGIN 
				i = i - 1
			END
			RETURN 2
		END
		
	BEGIN
		a2 = 10;
		b2 = 3 * a2
		RETURN b2 + a2
	END

BEGIN
	x = 3 >= 4;
	y = x && z || x;
	BEGIN
		q = 3 + 6;
		r = (t + q) MOD 4;
		r = fun(3,15,TRUE,FALSE);
		BEGIN
		END;
	x = q == 9
	END
END 7